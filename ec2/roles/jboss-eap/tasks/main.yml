---
# tasks file for jboss-eap
- name: get user home directory
  shell: >
    getent passwd `whoami` | awk -F: '{ print $6 }'
  changed_when: false
  register: user_home

- name: Make a directory for source checkouts
  file:
    path: "{{ user_home.stdout }}/src"
    state: directory

- name: get the java version
  shell: >
    java -version 
  register: java_version
  ignore_errors: true
  

- name: print java version
  debug:
    msg: "Java Version: {{ java_version }}"
  when: java_version.rc==0

- name: Install openjdk 1.8 and dependencies
  dnf:
    name: "{{ item }}"
    state: present
  with_items: 
    - java-1.8.0-openjdk
  become: yes
  when: java_version.rc!=0

- name: install unzip and tar
  ansible.builtin.yum:
    name:
      - unzip
      - tar
    state: present
  become: true

- name: Create jboss home directory if it does not exist
  ansible.builtin.file:
    path: "{{ user_home.stdout }}/opt/jboss"
    state: directory
    mode: '0755'



- name: "Create groups for EAP"
  become: yes
  ansible.builtin.group:
    name: "{{ item.group }}"
    system: yes
    state: present
    gid: "{{ item.group_id }}"
  with_items:
    - "{{ jboss }}"

- name: "Create users for EAP"
  become: yes
  ansible.builtin.user:
    name: "{{ item.user }}"
    comment: "{{ item.user }} user"
    uid: "{{ item.group_id }}"
    group: "{{ item.group }}"
    home: "{{ item.user_home }}"
    shell: "/bin/sh"
  with_items:
    - "{{ jboss }}"

- name: Recursively change ownership of Jboss home directory
  ansible.builtin.file:
    path: "{{ user_home.stdout }}/opt/jboss"
    state: directory
    recurse: yes
    owner: "{{ jboss.user }}"
    group: "{{ jboss.group }}"
  become: yes

- name: Check if Jboss EAP executable exists
  stat:
    path: "{{ user_home.stdout }}/opt/jboss/jboss-eap-7.4.0.zip"
  register: file_stat


- name: Copy Jboss EAP 7.4 to /opt/jboss
  ansible.builtin.copy:
    src: ./files/jboss-eap-7.4.0.zip
    dest: "{{ user_home.stdout }}/opt/jboss/jboss-eap-7.4.0.zip"
    owner: "{{ jboss.user }}"
    group: "{{ jboss.group }}"
  when: not file_stat.stat.exists
  become: yes


- name: Extract Jboss EAP 7.4 to /opt/jboss
  ansible.builtin.unarchive:
    src: "{{ user_home.stdout }}/opt/jboss/jboss-eap-7.4.0.zip"
    dest: "{{ user_home.stdout }}/opt/jboss"
    remote_src: yes
    owner: "{{ jboss.user }}"
    group: "{{ jboss.group }}"
  become: yes
  when: not file_stat.stat.exists


- name: Set JBoss EAP home
  ansible.builtin.lineinfile:
    path: "{{ user_home.stdout }}/opt/jboss/jboss-eap-7.4/bin/standalone.conf"
    line: "export JBOSS_HOME={{ user_home.stdout }}/opt/jboss/jboss-eap-7.4"
    state: present
  become: yes


- name: Start JBoss server
  command:
    cmd: "./standalone.sh"
    chdir: "{{ user_home.stdout }}/opt/jboss/jboss-eap-7.4/bin"
  become: yes

- name: "Verify EAP server is running and accessible."
  become: yes
  vars:
    ports: '8080'
  ansible.builtin.get_url:
    url: "http://localhost:{{ ports }}/"
    dest: "/tmp/{{ ports }}"

   
  